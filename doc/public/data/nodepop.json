{
    "name": "Nodepop API",
    "description": "API for Nodepop site.",
    "protocol": "rest",
    "basePath": "http://localhost:3000",
    "publicPath": "/apiv1",
    "headers": {
        "Accept": "application/json",
        "Accept-Language": "en,es;q=0.8"
    },
    "resources": {
        "Users": {
            "methods": {
                "RegisterUser": {
                    "name": "Register User",
                    "path": "/users",
                    "httpMethod": "POST",
                    "description": "Creates a new user in nodepop platform.",
                    "parameters": {
                        "name": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Personal name of user.",
                            "location": "body"
                        },
                        "email": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Personal email of user.",
                            "location": "body"
                        },
                        "password": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Password of user.",
                            "location": "body"
                        }
                    }
                },
                "AuthenticateUser": {
                    "name": "Authenticate User",
                    "path": "/users/authenticate",
                    "httpMethod": "POST",
                    "description": "Checks user credentials and returns a token for use in other endpoints. Token expires in 48 hours.",
                    "parameters": {
                        "email": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Personal email of user.",
                            "location": "body"
                        },
                        "password": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Password of user.",
                            "location": "body"
                        }
                    }
                }
            }
        },
        "Advertisements": {
            "methods": {
                "ListAdvertisements": {
                    "name": "List Advertisements",
                    "path": "/advertisements",
                    "httpMethod": "GET",
                    "description": "Gets a list of all published advertisements.",
                    "parameters": {
                        "token": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Authentication token.",
                            "location": "query"
                        },
                        "tags": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Tags filter separated by comma (tags=mobile,motor). At least one tag must match.",
                            "location": "query"
                        },
                        "forSale": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "For sale filter (forSale=true, forSale=false).",
                            "location": "query"
                        },
                        "name": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Name filter, shows advertisements that starts with text (name=vo).",
                            "location": "query"
                        },
                        "price": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Price range filter: equals (price=50), greater or equals (price=50-), lower or equals (price=-50), between (price=10-50).",
                            "location": "query"
                        },
                        "skip": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Skip first n advertisements (skip=2).",
                            "location": "query"
                        },
                        "limit": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Limits results to n advertisements (limit=1).",
                            "location": "query"
                        },
                        "sort": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Order advertisements by field: ascending (sort=name); descending (sort=-name).",
                            "location": "query"
                        }
                    }
                },
                "ListTags": {
                    "name": "List Tags",
                    "path": "/advertisements/tags",
                    "httpMethod": "GET",
                    "description": "Gets a list of all tags of published advertisements, and the total of advertisements of each tag.",
                    "parameters": {
                        "token": {
                            "type": "string",
                            "required": true,
                            "default": "",
                            "description": "Authentication token.",
                            "location": "query"
                        },
                        "sort": {
                            "type": "string",
                            "required": false,
                            "default": "",
                            "description": "Order tags by advertisements: ascending (sort=advertisements); descending (sort=-adverisements).",
                            "location": "query"
                        }
                    }
                }
            }
        }
    }
}
